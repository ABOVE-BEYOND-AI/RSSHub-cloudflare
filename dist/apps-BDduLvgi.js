import"./config-HRWLmo66.js";import"./logger-DHpG8Bim.js";import{art as e}from"./render-DE4LRFBD.js";import{parseDate as t}from"./parse-date-DHsdom8D.js";import{ofetch_default as n}from"./ofetch-DRl42yaJ.js";import{__dirname as r}from"./esm-shims-BDPl6Msv.js";import{ViewType as i}from"./types-D9T3SQ-7.js";import a from"node:path";import{load as o}from"cheerio";const s=e=>{let t={0:`search.score() desc, Metadata/OfficialRepositoryNumber desc, NameSortable asc`,1:`NameSortable asc, Metadata/OfficialRepositoryNumber desc, Metadata/RepositoryStars desc, Metadata/Committed desc`,2:`Metadata/Committed desc, Metadata/OfficialRepositoryNumber desc, Metadata/RepositoryStars desc`};if(e===`1`)return t;let n={};for(let e in t){let r=t[e];n[e]=r.replaceAll(/\b(desc|asc)\b/gi,e=>e.toLowerCase()===`desc`?`asc`:`desc`)}return n},c={o:`Metadata/OfficialRepositoryNumber eq 1`,dm:`Metadata/DuplicateOf eq null`},l=async i=>{let{query:l=`s=2&d=1&n=true&dm=true&o=true`}=i.req.param(),u=Number.parseInt(i.req.query(`limit`)??`50`,10),d=`https://scoop.sh`,f=new URL(`/#/apps?${l}`,d).href,p=new URL(`indexes/apps/docs/search`,`https://scoopsearch.search.windows.net`).href,m=await n(f),h=o(m),g=h(`html`).attr(`lang`)??`en`,_=/<script type="module" crossorigin src="(.*?)"><\/script>/,v=_.test(m)?new URL(m.match(_)?.[1],d).href:``;if(!v)throw Error(`JavaScript file not found.`);let y=await n(v,{parseResponse:e=>e}),b=y.match(/VITE_APP_AZURESEARCH_KEY:"(.*?)"/)?.[1];if(!b)throw Error(`Key not found.`);let x=!l.includes(`o=false`),S=!l.includes(`dm=false`),C=l.match(/s=(\d+)/)?.[1]??`2`,w=l.match(/d=(\d+)/)?.[1]??`1`,T=await n(p,{method:`post`,query:{"api-version":`2020-06-30`},headers:{"api-key":b,origin:d,referer:d},body:{count:!0,search:``,searchMode:`all`,filter:[x?c.o:void 0,S?c.dm:void 0].filter(Boolean).join(` and `),orderby:s(w)[C],skip:0,top:u,select:`Id,Name,NamePartial,NameSuffix,Description,Notes,Homepage,License,Version,Metadata/Repository,Metadata/FilePath,Metadata/OfficialRepository,Metadata/RepositoryStars,Metadata/Committed,Metadata/Sha`,highlight:`Name,NamePartial,NameSuffix,Description,Version,License,Metadata/Repository`,highlightPreTag:`<mark>`,highlightPostTag:`</mark>`}}),E=[];E=T.value.slice(0,u).map(n=>{let i=n.Metadata.Repository.split(/\//),o=i.slice(-2).join(`/`),s=`${n.Name} ${n.Version} in ${o}`,c=e(a.join(r,`templates/description-fe4e5583.art`),{item:n}),l=n.Metadata.Committed,u=n.Homepage,d=[{name:o,url:n.Metadata.Repository,avatar:void 0}],f=`scoop-${n.Name}-${n.Version}-${n.Metadata.Sha}`,p=l,m={title:s,description:c,pubDate:l?t(l):void 0,link:u,author:d,guid:f,id:f,content:{html:c,text:c},updated:p?t(p):void 0,language:g};return m});let D=`Scoop`;return{title:`${D} - Apps`,description:void 0,link:f,item:E,allowEmpty:!0,author:D,language:g,id:f}},u={path:`/apps/:query?`,name:`Apps`,url:`scoop.sh`,maintainers:[`nczitzk`],handler:l,example:`/scoop/apps`,parameters:{query:{description:"Query, `s=2&d=1&n=true&dm=true&o=true` by default"}},description:`:::tip
To subscribe to [Apps](https://scoop.sh/#/apps?s=2&d=1&n=true&dm=true&o=true), where the source URL is \`https://scoop.sh/#/apps?s=2&d=1&n=true&dm=true&o=true\`, extract the certain parts from this URL to be used as parameters, resulting in the route as [\`/scoop/apps/s=2&d=1&n=true&dm=true&o=true\`](https://rsshub.app/scoop/apps/s=2&d=1&n=true&dm=true&o=true).

:::
`,categories:[`program-update`],features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportRadar:!0,supportBT:!1,supportPodcast:!1,supportScihub:!1},radar:[{source:[`scoop.sh/#/apps`,`scoop.sh`],target:(e,t)=>{let n=new URL(t),r=n.searchParams.toString()??void 0;return`/scoop/apps${r?`/${r}`:``}`}}],view:i.Notifications};export{l as handler,u as route};